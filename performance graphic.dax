THAT_GRAPH = 
    VAR CONTENT_NODE = CONCATENATEX(
        THAT_GRAPH_UTILS,

        "<div class='graphic__container' id='"& THAT_GRAPH_UTILS[Nome] &"'>

            <div class='center__point'></div>

            <div class='data__wrapper'>
                <div class='left-top clip'
                ></div>
                <div class='right-top clip'
                ></div>
                <div class='left-bottom clip'
                ></div>
                <div class='right-bottom clip'
                ></div>
            </div>

            <div class='lb up'>
                <span>reopened <br/>("& THAT_GRAPH_UTILS[reopened] &"%)</span>
            </div>

            <div class='lb left'>
                <span>closed <br/>("& THAT_GRAPH_UTILS[closed] &"%)</span>
            </div>

            <div class='lb bottom'>
                <span>canceled <br/>("& THAT_GRAPH_UTILS[canceled] &"%)</span>
            </div>

            <div class='lb right'>
                <span>in progress <br/>("& THAT_GRAPH_UTILS[in progress] &"%)</span>
            </div>
            
            <div class='name__label'>"& THAT_GRAPH_UTILS[Nome] &"</div>
        </div>"
    )

    VAR CLIP_PATH_NODE = CONCATENATEX(
        THAT_GRAPH_UTILS,
        "#"& THAT_GRAPH_UTILS[Nome] &" > .data__wrapper > .left-top{
          clip-path: polygon(
            100% 100%,"& 100 - (THAT_GRAPH_UTILS[closed] * 2) &"% 100%, 100% "& 100 - (THAT_GRAPH_UTILS[reopened] * 2) &"%);
        }"&
        "#"& THAT_GRAPH_UTILS[Nome] &" > .data__wrapper > .right-top{
          clip-path: polygon(
            "& THAT_GRAPH_UTILS[in progress] * 2 &"% 100%, 0 100%, 0 "& 100 - (THAT_GRAPH_UTILS[reopened] * 2) &"%);
        }"&
        "#"& THAT_GRAPH_UTILS[Nome] &" > .data__wrapper > .left-bottom{
          clip-path: polygon(100% "& THAT_GRAPH_UTILS[canceled] * 2 &"%, 100% 0, "& 100 - (THAT_GRAPH_UTILS[closed] * 2) &"% 0);
        }"&
        "#"& THAT_GRAPH_UTILS[Nome] &" > .data__wrapper > .right-bottom{
          clip-path: polygon("& THAT_GRAPH_UTILS[in progress] * 2 &"% 0, 0 "& THAT_GRAPH_UTILS[canceled] * 2 &"%, 0 0);
        }"
        
      /* .left-top {
        clip-path: polygon(100% 100%, [I_E_-] 100%, 100% [S_D_-]);
      } */
      /* .right-top {
        clip-path: polygon([I_D_+] 100%, 0 100%, 0 [S_E_-]);
      } */
      /* .right-bottom {
        clip-path: polygon([S_D_+] 0, 0 [I_E_+], 0 0);
      } */
      /* .left-bottom {
        clip-path: polygon(100% [I_D_+], 100% 0, [S_E_-] 0);
      } */
    )

    VAR HTML_BASE = SUBSTITUTE("
    <style>
      *,
      *::after,
      *::before {
        margin: 0;
        padding: 0;
        transition: 0.5s ease-in-out;
      }

      body,
      html {
        width: 100%;
        min-height: 100vh;
        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
          Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
          sans-serif;
      }

      .graphic__container {
        width: 100vh;
        height: 100Vh;
        background-color: rgb(34, 34, 34);
        display: grid;
        place-items: center;
        position: relative;
      }

      .center__point {
        height: 2px;
        width: 2px;
        background-color: black;
        position: absolute;
      }

      .data__wrapper {
        width: 70%;
        height: 70%;
        background-color: rgba(0, 0, 0, 0.192);
        display: flex;
        flex-wrap: wrap;
        border-radius: 100vmax;
        animation: infinite zooming 1s alternate
          cubic-bezier(0.25, 0.46, 0.45, 0.94);
      }
      .data__wrapper:hover {
        animation: none;
        transform: scale(1.1);
      }

      @keyframes zooming {
        from {
          transform: scale(1);
        }
        to {
          transform: scale(1.01);
        }
      }

      .clip {
        background-color: rgba(17, 95, 113, 0.378);
        width: 50%;
        height: 50%;
      }

      .clip:hover {
        background-color: rgba(250, 235, 215, 0.241);
      }

      .lb {
        position: absolute;
        color: rgba(255, 255, 255, 0.527);
      }
      .lb > span {
        font-size: 1em;
      }

      .lb > span:hover {
        color: rgb(255, 255, 255);
      }

      .up,
      .bottom {
        width: 100%;
        text-align: center;
      }

      .bottom > span::after {
        bottom: 0;
        left: 0;
      }
      .up > span::after {
        bottom: 100vh;
        left: 0;
      }

      .bottom {
        bottom: 10px;
      }

      .up {
        top: 10px;
      }

      .left {
        left: 10px;
      }

      .right {
        right: 10px;
      }
      .name__label{
        color: white;
        position: absolute;
        top: 0;
        left: 0;
        padding-left: 5px;
      }
      .base__container{
        transition: none;
        scroll-snap-type: y mandatory;
        height: 100vh;
        width: 100vh;
        overflow: scroll;
        outline: 1px solid;
        scroll-behavior: smooth;
      }
      .graphic__container{
        transition: none;
        scroll-snap-align: start;
      }
      ::-webkit-scrollbar{
        display: none;
      }
      .options{
        width: 100vh;
        height: 100vh;
        scroll-snap-align: start;
      }
      .options > a{
        color: black;
        text-decoration: none;
      }
      <%cpn>
    </style>
    <div class='base__container'>
        <%1>
    </div>
", "<%1>", CONTENT_NODE)
VAR ADD_CLIP_PATH_NODE = SUBSTITUTE(HTML_BASE, "<%cpn>", CLIP_PATH_NODE)
RETURN ADD_CLIP_PATH_NODE
